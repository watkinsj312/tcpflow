# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/tcpflow
pkgincludedir = $(includedir)/tcpflow
pkglibdir = $(libdir)/tcpflow
pkglibexecdir = $(libexecdir)/tcpflow
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = tcpflow$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/slg_searchdirs.m4 \
	$(top_srcdir)/m4/slg_gcc_all_warnings.m4 \
	$(top_srcdir)/src/dfxml/src/dfxml_configure.m4 \
	$(top_srcdir)/src/be13_api/be13_configure.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__tcpflow_SOURCES_DIST = dfxml/src/dfxml_writer.cpp \
	dfxml/src/dfxml_writer.h dfxml/src/hash_t.h \
	netviz/plot_view.cpp netviz/plot_view.h \
	netviz/time_histogram_view.cpp netviz/time_histogram_view.h \
	netviz/time_histogram.cpp netviz/time_histogram.h \
	netviz/address_histogram_view.cpp \
	netviz/address_histogram_view.h netviz/address_histogram.cpp \
	netviz/address_histogram.h netviz/port_histogram_view.cpp \
	netviz/port_histogram_view.h netviz/port_histogram.cpp \
	netviz/port_histogram.h netviz/packetfall.cpp \
	netviz/packetfall.h netviz/net_map.cpp netviz/net_map.h \
	netviz/legend_view.cpp netviz/legend_view.h \
	netviz/one_page_report.cpp netviz/one_page_report.h \
	be13_api/atomic_set_map.h be13_api/aftimer.h \
	be13_api/beregex.cpp be13_api/beregex.h \
	be13_api/bulk_extractor_i.h be13_api/cppmutex.h \
	be13_api/feature_recorder.cpp be13_api/feature_recorder.h \
	be13_api/feature_recorder_set.cpp \
	be13_api/feature_recorder_set.h \
	be13_api/feature_recorder_sql.cpp be13_api/histogram.h \
	be13_api/histogram.cpp be13_api/net_ethernet.h \
	be13_api/pcap_fake.cpp be13_api/pcap_fake.h \
	be13_api/plugin.cpp be13_api/sbuf.cpp be13_api/sbuf.h \
	be13_api/sbuf_private.h be13_api/sbuf_stream.cpp \
	be13_api/sbuf_stream.h be13_api/unicode_escape.cpp \
	be13_api/unicode_escape.h be13_api/utf8.h \
	be13_api/utf8/checked.h be13_api/utf8/core.h \
	be13_api/utf8/unchecked.h be13_api/utils.cpp be13_api/utils.h \
	be13_api/word_and_context_list.cpp \
	be13_api/word_and_context_list.h datalink_wifi.cpp \
	datalink_wifi.h scan_wifiviz.cpp wifipcap/TimeVal.cpp \
	wifipcap/TimeVal.h wifipcap/arp.h wifipcap/cpack.cpp \
	wifipcap/cpack.h wifipcap/ether.h wifipcap/ethertype.h \
	wifipcap/extract.h wifipcap/icmp.h wifipcap/ieee802_11_radio.h \
	wifipcap/ip.h wifipcap/ip6.h wifipcap/ipproto.h wifipcap/llc.h \
	wifipcap/os.h wifipcap/oui.h wifipcap/prism.h \
	wifipcap/radiotap.h wifipcap/tcp.h wifipcap/types.h \
	wifipcap/udp.h wifipcap/util.h wifipcap/wifipcap.cpp \
	wifipcap/wifipcap.h datalink.cpp flow.cpp tcpflow.cpp tcpip.h \
	tcpip.cpp tcpdemux.h tcpdemux.cpp tcpflow.h util.cpp \
	scan_md5.cpp scan_http.cpp scan_tcpdemux.cpp scan_netviz.cpp \
	pcap_writer.h iptree.h http-parser/http_parser.c \
	http-parser/http_parser.h mime_map.cpp mime_map.h
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = dfxml/src/dfxml_writer.$(OBJEXT)
am__objects_2 = netviz/plot_view.$(OBJEXT) \
	netviz/time_histogram_view.$(OBJEXT) \
	netviz/time_histogram.$(OBJEXT) \
	netviz/address_histogram_view.$(OBJEXT) \
	netviz/address_histogram.$(OBJEXT) \
	netviz/port_histogram_view.$(OBJEXT) \
	netviz/port_histogram.$(OBJEXT) netviz/packetfall.$(OBJEXT) \
	netviz/net_map.$(OBJEXT) netviz/legend_view.$(OBJEXT) \
	netviz/one_page_report.$(OBJEXT)
am__objects_3 = be13_api/beregex.$(OBJEXT) \
	be13_api/feature_recorder.$(OBJEXT) \
	be13_api/feature_recorder_set.$(OBJEXT) \
	be13_api/feature_recorder_sql.$(OBJEXT) \
	be13_api/histogram.$(OBJEXT) be13_api/pcap_fake.$(OBJEXT) \
	be13_api/plugin.$(OBJEXT) be13_api/sbuf.$(OBJEXT) \
	be13_api/sbuf_stream.$(OBJEXT) \
	be13_api/unicode_escape.$(OBJEXT) be13_api/utils.$(OBJEXT) \
	be13_api/word_and_context_list.$(OBJEXT)
am__objects_4 = datalink_wifi.$(OBJEXT) scan_wifiviz.$(OBJEXT) \
	wifipcap/TimeVal.$(OBJEXT) wifipcap/cpack.$(OBJEXT) \
	wifipcap/wifipcap.$(OBJEXT)
am__objects_5 = $(am__objects_4)
am_tcpflow_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_5) datalink.$(OBJEXT) \
	flow.$(OBJEXT) tcpflow.$(OBJEXT) tcpip.$(OBJEXT) \
	tcpdemux.$(OBJEXT) util.$(OBJEXT) scan_md5.$(OBJEXT) \
	scan_http.$(OBJEXT) scan_tcpdemux.$(OBJEXT) \
	scan_netviz.$(OBJEXT) http-parser/http_parser.$(OBJEXT) \
	mime_map.$(OBJEXT)
tcpflow_OBJECTS = $(am_tcpflow_OBJECTS)
tcpflow_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(tcpflow_SOURCES)
DIST_SOURCES = $(am__tcpflow_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/be13_api/Makefile.defs \
	$(srcdir)/dfxml/src/Makefile.defs $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/tcpflow/tcpflow-1.4.5/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /root/tcpflow/tcpflow-1.4.5/missing autoconf
AUTOHEADER = ${SHELL} /root/tcpflow/tcpflow-1.4.5/missing autoheader
AUTOMAKE = ${SHELL} /root/tcpflow/tcpflow-1.4.5/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g   -pthread -g -O3 -MD -Wpointer-arith -Wmissing-declarations -Wmissing-prototypes -Wshadow -Wwrite-strings -Wcast-align -Waggregate-return -Wbad-function-cast -Wcast-qual -Wundef -Wredundant-decls -Wdisabled-optimization -Wfloat-equal -Wmultichar -Wc++-compat -Wmissing-noreturn -Wall -Wstrict-prototypes -MD -D_FORTIFY_SOURCE=2 -Wpointer-arith -Wmissing-declarations -Wmissing-prototypes -Wshadow -Wwrite-strings -Wcast-align -Waggregate-return -Wbad-function-cast -Wcast-qual -Wundef -Wredundant-decls -Wdisabled-optimization -Wfloat-equal -Wmultichar -Wc++-compat -Wmissing-noreturn -Wall -Wstrict-prototypes
CPP = gcc -E
CPPFLAGS = -pthread -I/usr/local/include -I/usr/local/include  -DUTC_OFFSET=-0400 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -pthread -g -O3 -Wall -MD -D_FORTIFY_SOURCE=2 -Wpointer-arith -Wshadow -Wwrite-strings -Wcast-align -Wredundant-decls -Wdisabled-optimization -Wfloat-equal -Wmultichar -Wmissing-noreturn -Woverloaded-virtual -Wsign-promo -funit-at-a-time -Weffc++ -std=c++0x -Wall -MD -D_FORTIFY_SOURCE=2 -Wpointer-arith -Wshadow -Wwrite-strings -Wcast-align -Wredundant-decls -Wdisabled-optimization -Wfloat-equal -Wmultichar -Wmissing-noreturn -Woverloaded-virtual -Wsign-promo -funit-at-a-time -Wstrict-null-sentinel -Weffc++ 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -L/usr/local/lib -L/usr/local/lib 
LIBOBJS = 
LIBS = -lpcap -lcairo -lfontconfig -lfreetype -lpixman-1 -lexpat  -lsqlite3 -lssl -lcrypto -lssl -lcrypto -ldl -lz 
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /root/tcpflow/tcpflow-1.4.5/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = tcpflow
PACKAGE_BUGREPORT = simsong@github.com
PACKAGE_NAME = TCPFLOW
PACKAGE_STRING = TCPFLOW 1.4.5
PACKAGE_TARNAME = tcpflow
PACKAGE_URL = 
PACKAGE_VERSION = 1.4.5
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.4.5
abs_builddir = /root/tcpflow/tcpflow-1.4.5/src
abs_srcdir = /root/tcpflow/tcpflow-1.4.5/src
abs_top_builddir = /root/tcpflow/tcpflow-1.4.5
abs_top_srcdir = /root/tcpflow/tcpflow-1.4.5
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_prefix_program = /usr/local/bin/tcpflow
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
git = yes
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/tcpflow/tcpflow-1.4.5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#WIFI_INCS = 
WIFI_INCS = -I${top_srcdir}/src/wifipcap
AM_CPPFLAGS = -I${top_srcdir}/src/be13_api $(WIFI_INCS)
CONFIG_CLEAN_FILES = config.h		# old location of config.h
DFXML_WRITER = dfxml/src/dfxml_writer.cpp \
      dfxml/src/dfxml_writer.h \
      dfxml/src/hash_t.h 

DFXML_READER = dfxml/src/dfxml_reader.cpp \
      dfxml/src/dfxml_reader.h \
      dfxml/src/hash_t.h 

BE13_API = \
        be13_api/atomic_set_map.h \
        be13_api/aftimer.h \
        be13_api/beregex.cpp \
        be13_api/beregex.h \
        be13_api/bulk_extractor_i.h \
        be13_api/cppmutex.h \
        be13_api/feature_recorder.cpp \
        be13_api/feature_recorder.h \
        be13_api/feature_recorder_set.cpp \
        be13_api/feature_recorder_set.h \
        be13_api/feature_recorder_sql.cpp \
        be13_api/histogram.h \
        be13_api/histogram.cpp \
        be13_api/net_ethernet.h \
        be13_api/pcap_fake.cpp \
        be13_api/pcap_fake.h \
        be13_api/plugin.cpp \
        be13_api/sbuf.cpp \
        be13_api/sbuf.h \
        be13_api/sbuf_private.h \
        be13_api/sbuf_stream.cpp \
        be13_api/sbuf_stream.h \
        be13_api/unicode_escape.cpp \
        be13_api/unicode_escape.h \
        be13_api/utf8.h \
        be13_api/utf8/checked.h \
        be13_api/utf8/core.h \
        be13_api/utf8/unchecked.h \
        be13_api/utils.cpp \
        be13_api/utils.h \
        be13_api/word_and_context_list.cpp \
        be13_api/word_and_context_list.h 


# http://stackoverflow.com/questions/11438613/conditional-subdir-objects
AUTOMAKE_OPTIONS = subdir-objects
NETVIZ = \
	netviz/plot_view.cpp \
	netviz/plot_view.h \
	netviz/time_histogram_view.cpp \
	netviz/time_histogram_view.h \
	netviz/time_histogram.cpp \
	netviz/time_histogram.h \
	netviz/address_histogram_view.cpp \
	netviz/address_histogram_view.h \
	netviz/address_histogram.cpp \
	netviz/address_histogram.h \
	netviz/port_histogram_view.cpp \
	netviz/port_histogram_view.h \
	netviz/port_histogram.cpp \
	netviz/port_histogram.h \
	netviz/packetfall.cpp \
	netviz/packetfall.h \
	netviz/net_map.cpp \
	netviz/net_map.h \
	netviz/legend_view.cpp \
	netviz/legend_view.h \
	netviz/one_page_report.cpp \
	netviz/one_page_report.h

WIFI = datalink_wifi.cpp \
	datalink_wifi.h \
	scan_wifiviz.cpp \
	wifipcap/TimeVal.cpp \
	wifipcap/TimeVal.h \
	wifipcap/arp.h \
	wifipcap/cpack.cpp \
	wifipcap/cpack.h \
	wifipcap/ether.h \
	wifipcap/ethertype.h \
	wifipcap/extract.h \
	wifipcap/icmp.h \
	wifipcap/ieee802_11_radio.h \
	wifipcap/ip.h \
	wifipcap/ip6.h \
	wifipcap/ipproto.h \
	wifipcap/llc.h \
	wifipcap/os.h \
	wifipcap/oui.h \
	wifipcap/prism.h \
	wifipcap/radiotap.h \
	wifipcap/tcp.h \
	wifipcap/types.h \
	wifipcap/udp.h \
	wifipcap/util.h \
	wifipcap/wifipcap.cpp \
	wifipcap/wifipcap.h

#WIFI_FILES = 
WIFI_FILES = $(WIFI)
tcpflow_SOURCES = \
	$(DFXML_WRITER) $(NETVIZ) $(BE13_API) $(WIFI_FILES) \
	datalink.cpp flow.cpp \
	tcpflow.cpp \
	tcpip.h tcpip.cpp \
	tcpdemux.h tcpdemux.cpp \
	tcpflow.h util.cpp \
	scan_md5.cpp \
	scan_http.cpp \
	scan_tcpdemux.cpp \
	scan_netviz.cpp \
	pcap_writer.h \
	iptree.h \
	http-parser/http_parser.c \
	http-parser/http_parser.h \
	mime_map.cpp \
	mime_map.h 

EXTRA_DIST = \
	http-parser/AUTHORS \
	http-parser/CONTRIBUTIONS \
	http-parser/LICENSE-MIT \
	http-parser/Makefile \
	http-parser/README.md \
	http-parser/http_parser.gyp \
	wifipcap/README.txt \
	wifipcap/TimeVal.cpp \
	wifipcap/TimeVal.h \
	wifipcap/arp.h \
	wifipcap/ether.h \
	wifipcap/ethertype.h \
	wifipcap/extract.h \
	wifipcap/icmp.h \
	wifipcap/ieee802_11_radio.h \
	wifipcap/ip.h \
	wifipcap/ip6.h \
	wifipcap/ipproto.h \
	wifipcap/os.h \
	wifipcap/oui.h \
	wifipcap/prism.h \
	wifipcap/radiotap.h \
	wifipcap/sample.cpp \
	wifipcap/tcp.h \
	wifipcap/types.h \
	wifipcap/udp.h \
	wifipcap/util.cpp \
	wifipcap/util.h \
	wifipcap/wifipcap.cpp \
	wifipcap/wifipcap.h 

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/dfxml/src/Makefile.defs $(srcdir)/be13_api/Makefile.defs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/dfxml/src/Makefile.defs $(srcdir)/be13_api/Makefile.defs $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
dfxml/src/$(am__dirstamp):
	@$(MKDIR_P) dfxml/src
	@: > dfxml/src/$(am__dirstamp)
dfxml/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dfxml/src/$(DEPDIR)
	@: > dfxml/src/$(DEPDIR)/$(am__dirstamp)
dfxml/src/dfxml_writer.$(OBJEXT): dfxml/src/$(am__dirstamp) \
	dfxml/src/$(DEPDIR)/$(am__dirstamp)
netviz/$(am__dirstamp):
	@$(MKDIR_P) netviz
	@: > netviz/$(am__dirstamp)
netviz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) netviz/$(DEPDIR)
	@: > netviz/$(DEPDIR)/$(am__dirstamp)
netviz/plot_view.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/time_histogram_view.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/time_histogram.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/address_histogram_view.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/address_histogram.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/port_histogram_view.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/port_histogram.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/packetfall.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/net_map.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/legend_view.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
netviz/one_page_report.$(OBJEXT): netviz/$(am__dirstamp) \
	netviz/$(DEPDIR)/$(am__dirstamp)
be13_api/$(am__dirstamp):
	@$(MKDIR_P) be13_api
	@: > be13_api/$(am__dirstamp)
be13_api/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) be13_api/$(DEPDIR)
	@: > be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/beregex.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/feature_recorder.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/feature_recorder_set.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/feature_recorder_sql.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/histogram.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/pcap_fake.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/plugin.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/sbuf.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/sbuf_stream.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/unicode_escape.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/utils.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
be13_api/word_and_context_list.$(OBJEXT): be13_api/$(am__dirstamp) \
	be13_api/$(DEPDIR)/$(am__dirstamp)
wifipcap/$(am__dirstamp):
	@$(MKDIR_P) wifipcap
	@: > wifipcap/$(am__dirstamp)
wifipcap/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wifipcap/$(DEPDIR)
	@: > wifipcap/$(DEPDIR)/$(am__dirstamp)
wifipcap/TimeVal.$(OBJEXT): wifipcap/$(am__dirstamp) \
	wifipcap/$(DEPDIR)/$(am__dirstamp)
wifipcap/cpack.$(OBJEXT): wifipcap/$(am__dirstamp) \
	wifipcap/$(DEPDIR)/$(am__dirstamp)
wifipcap/wifipcap.$(OBJEXT): wifipcap/$(am__dirstamp) \
	wifipcap/$(DEPDIR)/$(am__dirstamp)
http-parser/$(am__dirstamp):
	@$(MKDIR_P) http-parser
	@: > http-parser/$(am__dirstamp)
http-parser/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) http-parser/$(DEPDIR)
	@: > http-parser/$(DEPDIR)/$(am__dirstamp)
http-parser/http_parser.$(OBJEXT): http-parser/$(am__dirstamp) \
	http-parser/$(DEPDIR)/$(am__dirstamp)

tcpflow$(EXEEXT): $(tcpflow_OBJECTS) $(tcpflow_DEPENDENCIES) $(EXTRA_tcpflow_DEPENDENCIES) 
	@rm -f tcpflow$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tcpflow_OBJECTS) $(tcpflow_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f be13_api/*.$(OBJEXT)
	-rm -f dfxml/src/*.$(OBJEXT)
	-rm -f http-parser/*.$(OBJEXT)
	-rm -f netviz/*.$(OBJEXT)
	-rm -f wifipcap/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/datalink.Po
include ./$(DEPDIR)/datalink_wifi.Po
include ./$(DEPDIR)/flow.Po
include ./$(DEPDIR)/mime_map.Po
include ./$(DEPDIR)/scan_http.Po
include ./$(DEPDIR)/scan_md5.Po
include ./$(DEPDIR)/scan_netviz.Po
include ./$(DEPDIR)/scan_tcpdemux.Po
include ./$(DEPDIR)/scan_wifiviz.Po
include ./$(DEPDIR)/tcpdemux.Po
include ./$(DEPDIR)/tcpflow.Po
include ./$(DEPDIR)/tcpip.Po
include ./$(DEPDIR)/util.Po
include be13_api/$(DEPDIR)/beregex.Po
include be13_api/$(DEPDIR)/feature_recorder.Po
include be13_api/$(DEPDIR)/feature_recorder_set.Po
include be13_api/$(DEPDIR)/feature_recorder_sql.Po
include be13_api/$(DEPDIR)/histogram.Po
include be13_api/$(DEPDIR)/pcap_fake.Po
include be13_api/$(DEPDIR)/plugin.Po
include be13_api/$(DEPDIR)/sbuf.Po
include be13_api/$(DEPDIR)/sbuf_stream.Po
include be13_api/$(DEPDIR)/unicode_escape.Po
include be13_api/$(DEPDIR)/utils.Po
include be13_api/$(DEPDIR)/word_and_context_list.Po
include dfxml/src/$(DEPDIR)/dfxml_writer.Po
include http-parser/$(DEPDIR)/http_parser.Po
include netviz/$(DEPDIR)/address_histogram.Po
include netviz/$(DEPDIR)/address_histogram_view.Po
include netviz/$(DEPDIR)/legend_view.Po
include netviz/$(DEPDIR)/net_map.Po
include netviz/$(DEPDIR)/one_page_report.Po
include netviz/$(DEPDIR)/packetfall.Po
include netviz/$(DEPDIR)/plot_view.Po
include netviz/$(DEPDIR)/port_histogram.Po
include netviz/$(DEPDIR)/port_histogram_view.Po
include netviz/$(DEPDIR)/time_histogram.Po
include netviz/$(DEPDIR)/time_histogram_view.Po
include wifipcap/$(DEPDIR)/TimeVal.Po
include wifipcap/$(DEPDIR)/cpack.Po
include wifipcap/$(DEPDIR)/wifipcap.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f be13_api/$(DEPDIR)/$(am__dirstamp)
	-rm -f be13_api/$(am__dirstamp)
	-rm -f dfxml/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f dfxml/src/$(am__dirstamp)
	-rm -f http-parser/$(DEPDIR)/$(am__dirstamp)
	-rm -f http-parser/$(am__dirstamp)
	-rm -f netviz/$(DEPDIR)/$(am__dirstamp)
	-rm -f netviz/$(am__dirstamp)
	-rm -f wifipcap/$(DEPDIR)/$(am__dirstamp)
	-rm -f wifipcap/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) be13_api/$(DEPDIR) dfxml/src/$(DEPDIR) http-parser/$(DEPDIR) netviz/$(DEPDIR) wifipcap/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) be13_api/$(DEPDIR) dfxml/src/$(DEPDIR) http-parser/$(DEPDIR) netviz/$(DEPDIR) wifipcap/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


testiph: tcpflow
	echo Testing the IP histogram
	for i in 100 1000 10000 ; \
		do /bin/rm -f test-$$i out-$$i.txt ; \
		./tcpflow -o test1 -S iphtest=1 -S iphtrim=$$i -r /corp/nps/packets/2008-nitroba/nitroba.pcap > iphtest-nitroba-$$i.txt ; \
		done
	diff ../tests/iphtest-nitroba-100.txt iphtest-nitroba-100.txt 
	diff ../tests/iphtest-nitroba-1000.txt iphtest-nitroba-1000.txt 
	diff ../tests/iphtest-nitroba-10000.txt iphtest-nitroba-10000.txt 
	echo iptree appears okay.

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
